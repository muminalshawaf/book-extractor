// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ukznsekygmipnucpouoy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVrem5zZWt5Z21pcG51Y3BvdW95Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ2MjY4NzMsImV4cCI6MjA3MDIwMjg3M30.5gvy46gGEU-B9O3cutLNmLoX62dmEvKLC236yeaQ6So";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Add error logging for Supabase operations
supabase.auth.onAuthStateChange((event, session) => {
  console.log('Supabase auth state change:', { event, session });
  if (event === 'SIGNED_OUT' || event === 'TOKEN_REFRESHED') {
    console.log('Auth event details:', event);
  }
});

// Log any errors from Supabase operations
const originalFrom = supabase.from;
supabase.from = function(table: any) {
  const query = originalFrom.call(this, table);
  const originalThen = query.then;
  if (originalThen) {
    query.then = function(onFulfilled?: any, onRejected?: any) {
      return originalThen.call(this, 
        (result: any) => {
          if (result.error) {
            console.error('Supabase query error:', result.error);
            if (result.error.message?.includes('6815499131d56c71687ed8a3f50e2056')) {
              console.error('Found specific error hash in Supabase query:', result.error);
            }
          }
          return onFulfilled ? onFulfilled(result) : result;
        },
        onRejected
      );
    };
  }
  return query;
};